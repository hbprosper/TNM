$Revision: 1.29 $

v5_3_3 May 05 2012
------------------
        1. remove CMGTools from plugins by default
 
v5_3_2 May 04 2012
------------------
	1. place reflex utilities into ReflexLib.py
	2. re-write mkmacro.py - addition of user-defined variables works, as does
	   event selection. There is a bug in the object selection - to be fixed 
	   next release
	3. add methods to helper automatically so that help has the same
	   methods as the helped object
	4. change format of plugins - now use COLLECTION and SINGLETON types
	5. use try except to catch trigger setup problems
	6. streamline the way classes.txt is created

v5_3_1 Apr 15 2012
------------------
	1. add exclusionlist.txt (to exclude unwanted classes)

v5_3_0 Apr 11 2012
------------------
        1. Fix initTNMwCMG.py
        2. Make (minor) mods to compile in CMSSW_5_2_3_patch2

v5_2_8 Apr 03 2012
------------------
	1. Fix typo in initTNMwCMG.py

v5_2_7 Mar 31 2012
------------------
	1. change ntuplecfi.py to ntuple_cfi.py. (update mkntuplecfi.py)
	2. change config.py    to <package>_cfg.py. mkpackage.py updated 
	3. update mkpackage.py to use new naming scheme
	4. mkclasslist.py now handles objects such as DiObject<c1, c2>. Changed
       classes.txt to classlist.txt
	5. mkplugins.py now updates BuildFiles with packages required to
	   compile and link plugins.
	6. added initTNMwCMG.py, which can be used to initialize TheNtupleMaker by
	   creating python/classmap.py, plugins/classlist.txt and 
	   plugins/plugins*.cc
	7. mkanalyzer.py now permits the saving of selected objects.


v5_2_6 Aug 13 2011
------------------
	1. Fix usage of LHAPDF in GenEventProductInfoHelper.

v5_2_4 Aug 08 2011
------------------
	1. Fix <label>/<prefix> bug

v5_2_3 Aug 08 2011
------------------
	1. Modified GenEventInfoProductHelper.cc to use new param mechanism.
	2. Introduce variable prefix mechanism
					<label>/<prefix>
	e.g.
	GenEventInfoProductHelper	generator/cteq		


v5_2_2 Aug 01 2011
------------------
	1. Introduced param keyword in buffers. Helper classes can accessed buffer
	specific parameters using the method paramater(string) >> value
	2. Fix bug in mkhelper.py

	
v5_2_0 Jul 22 2011
------------------
	1. Fix duplicate class bug in classes_def.xml
	2. make block, buffer, and label names available to helpers
	3. undo is broken for now!

v5_1_9 Jul 20 2011
------------------
	1. Work with BuildFile.xml only and update mkpackage.py and mkhelper.py
	accordingly.
	2. Call HLTConfigProvider from beginRun() in TheNtupleMaker.
	3. Make pointer, hltconfig, to HLTConfigProvider available to all helpers
	and update HelperFor and Configuration accordingly.
	4. Remove HLT config set up from TriggerResultsHelper in user.cc.
	5. Fix problem with simple types in mkanalyzer.py
	6. Make mkvariables.py produce exactly the same variable names as 
	TheNtupleMaker.

v5_1_8 Jun 25 2011
------------------
	Add support for unsigned int, float, and vectors thereof.

v5_1_7 Jun 24 2011
------------------
	use getenv instead of gSystem->Getenv().

v5_1_6 Jun 24 2011
------------------
	1. Add option to save ints and vectors of ints.
	2. Get provenance info using gSystem->Getenv(..)

v5_1_5 Jun 07 2011
------------------
	Introduce the switch "crashOnInvalidHandle". When set to zero, 
	TheNtupleMaker will not crash if a handle is zero but merely issue
	an InvalidHandle warning.

v5_1_3 Jun 06 2011
------------------
	1. Allow for matches between std::string and std::basic_string>char> in 
	decodeArguments in rfx.cc. This is needed to handle arguments such as
	const std::string& used in userFloat(const std::string&).

v5_1_1 May 23 2011
------------------
	1. Add an (optional) flushEvent method to helpers. This method is called
	at the end of the event loop.

v5_1_0 May 23 2011
------------------
	1. explicitly call destructors for objects returned by value. An example
	of a method that does this is pat::Jet::correctedJet("Uncorrected"), which
	returns a pat::Jet by value.

	2. add memmon.py to help monitor memory of the specified program:

		memmon.py cmsRun


v5_0_9 May 19 2011
------------------
	1. create a single shared library from user and package plugins.
	2. drop EDM_PLUGIN flag from plugins/BuildFile.xml. This seems not be to
	needed anymore.
	3. mkplugins.py no longer modifies the BuildFile in the plugins directory.

v5_0_8 May   18 2011
--------------------
	1. group plugins into four plugin files. This is a compromise between 
	having one or all plugins per file.

   	2. Add missing scripts mkmacro.py and mkhelper.py

v5_0_7 May   12 2011
--------------------
   Add missing scripts mkmacro.py and mkhelper.py

v5_0_4 May   06 2011
--------------------
    1. Force CVS to preserve file modes 

v5_0_3 May   06 2011
--------------------
    1. Force CVS to preserve file modes 

v5_0_2 May   06 2011
--------------------
    1. No change, just a trying to test something

v5_0_1 May   04 2011
--------------------
	1. Rename Mkntuple to TheNtupleMaker. Since this is a major change, we
	go to v5_0_1.

    2. Use mkpackage.py instead of mksubpkg.py to be consistent with CMS
	jargon

	3. Bug fix: include dependency on PhysicsTools/TheNtupleMaker in the 
	BuildFile of a user package. This seems to trigger the scanning of 
	classes.h. But why is unclear.
 
v4_1_7 May   03 2011
--------------------
    1. Minor change

v4_1_6: Apr. 30 2011
--------------------
	1. Return -9999 for any method call that fails.

	2. PoissonGammaFit now allows the fixing of yields. This has been tested
	by Josh in the RA2b group. The optional use of weighted histograms has
	been implemented: the add method now has two optional arguments:

	add(source,			source counts 

				optional arguments

		fixed, 			true if the yield for this source is to be held fixed
		dsource)  		source count uncertainties

	Remember to get Root to return correct bin errors for weighted histograms,
	be sure to call Sumw2() method for the histogram before filling it.

	3. Changed the default save directory for the GUI to python. You will be
	warned if a file with the same name exists in the directory.

	4. Split plugins.cc into separate files, one per plugin. This was done to
	permit the use of scram b -jN to compile where "N" is the number of jobs to
	run in parallel. Typically, N is set to the number of machine cores 
	available. 

	5. TriggerResultsHelper now has an additional method:

		unsigned int prescale(std::string)

	which returns the prescale associated with the high-level trigger (HLT).
	For MC files, the method returns 1. The prescale method uses code from
	Josh, which uses the HLTConfigProvider. The prescale code has not been
	tested.

v4_1_5: Apr. 20 2011
--------------------
	1. Include GenRun* in the list of generator classes to be tested for
	in Buffer.h and UserBuffer.h. If Gen classes are requested but the file
	contains real data, the Gen classes are ignored. This way, exactly the
	same ntuplecfi.py configuration fragment can be run on data and MC.

v4_1_4: Apr. 14 2011
--------------------
	1. Fixed Slot - now uses unsigned long for addresses rather than 
	unsigned int

	2. Added new BuildFile formats

v4_1_3: Mar. 12 2011
--------------------
	1. Fixed variable naming bug in mkanalyzer.py
	2. rename mkselector.py to mkusermacro.py

	mkusermacro.py creates the template for a user-defined macro that is
	designed to be called by TheNtupleMaker. It is created using an existing
	variables.txt file. The macro can be used to add user-defined variables
	to the ntuple and perform event selection. See the example in the template.

	Example:

		mkusermacro.py mymacro

	creates
		mymacro.cc
		mymacro.h
		mymacro.mk

	which can be compiled and linked using

		make -f mymacro.mk
	
	This creates libmymacro.so. To load this macro into TheNtupleMaker add
	
		macroName = cms.untracked.string("mymacro.cc"),

	to 
		cms.EDAnalyzer("TheNtupleMaker",..
	
	

v4_1_2:	Feb. 17 2011
--------------------
	1. Merged histogramFile and skimFile into outputFile:

	Call
		outputFile(cmdline.outputfilename)

	to write out histograms only and

		outputFile(cmdline.outputfilename, stream)

	to write out histograms and a tree containing skimmed events.


	2. Added GenEventInfoProductHelper.

	This returns 45 PDF weights per event
		0	central value of PDFs
		1..	shifted values (1 to 44 for GTEQ)

	See genlevel.py in PhysicsTools/TheNtupleMaker/python for example of usage.


	3. Make mkvariables.py work on a larger class of simple ntuples


